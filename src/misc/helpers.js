// Generated by CoffeeScript 1.10.0
(function() {
  var R, dot, isTag, messageTextToLowerCaseExceptTags, method, sentenceToLowerCaseUnlessTag, toLowerCase, typeIs, userIsnt, wordToLowerCaseUnlessTag;

  R = require('ramda');


  /* SLACK */

  isTag = R.test(/<@.[^<]*>/);

  toLowerCase = function(string) {
    return string.toLowerCase();
  };

  wordToLowerCaseUnlessTag = function(word) {
    if (isTag(word)) {
      return word;
    } else {
      return toLowerCase(word);
    }
  };

  sentenceToLowerCaseUnlessTag = R.pipe(R.split(" "), R.map(wordToLowerCaseUnlessTag), R.join(" "));

  messageTextToLowerCaseExceptTags = R.evolve({
    text: sentenceToLowerCaseUnlessTag
  });

  typeIs = function(value) {
    return R.pipe(dot('type'), R.equals(value));
  };

  userIsnt = function(userId) {
    return R.pipe(dot('user'), R.equals(userId), R.not);
  };

  dot = function(key) {
    return function(obj) {
      if (obj[key] != null) {
        return obj[key];
      } else {
        return void 0;
      }
    };
  };

  method = dot;


  /* PUBLIC */

  module.exports = {
    dot: dot,
    method: method,
    slack: {
      userIsnt: userIsnt,
      typeIs: typeIs,
      messageTextToLowerCaseExceptTags: messageTextToLowerCaseExceptTags
    }
  };

}).call(this);
