// Generated by CoffeeScript 1.10.0
(function() {
  var Firebase, Promise, R, Rx, addId, base, dot, getBase, getChild, getStatus, getTeamId, getTeamRef, getUserBackDateTimeRef, getUserBackRef, getUserId, getUserRef, getUserStateRef, getUserStatusRef, getValue, getValueWithDefault, log, makeUserObject, method, ref, ref1, setValue, teams;

  Firebase = require('firebase');

  Promise = require('promise');

  R = require('ramda');

  Rx = require('rx');

  ref = require('../misc/helpers'), dot = ref.dot, method = ref.method;

  log = require('../misc/util').log;

  ref1 = require('./abstractions/firebase'), getBase = ref1.getBase, getChild = ref1.getChild, getValue = ref1.getValue, getValueWithDefault = ref1.getValueWithDefault;

  setValue = require('./abstractions/firebase').setValue;

  base = getBase('https://werebot.firebaseio.com');

  teams = getChild('teams', base);


  /* PRIVATE */

  getTeamId = dot('team');

  getUserId = dot('user');

  getStatus = dot('status');

  getUserRef = function(message) {
    return teams.child(getTeamId(message)).child('users/' + getUserId(message));
  };

  getTeamRef = R.pipe(getTeamId, getChild(teams));

  getUserStateRef = R.pipe(getUserRef, getChild('state'));

  getUserStatusRef = R.pipe(getUserRef, getChild('status'));

  getUserBackRef = R.pipe(getUserRef, getChild('back'));

  getUserBackDateTimeRef = R.pipe(getUserRef, getChild('backDateTime'));

  addId = function(value, message) {
    return R.merge(value, {
      id: getUserId(message)
    });
  };

  makeUserObject = function(userId, snapshot) {
    var user;
    user = {};
    user[userId] = snapshot.val();
    return user;
  };


  /* PUBLIC */

  exports.getUser = R.pipe(getUserRef, getValue);

  exports.getUserState = R.pipe(getUserStateRef, getValueWithDefault('idle'));

  exports.getUserStatus = R.pipe(getUserStatusRef, getValue);

  exports.getUserBack = R.pipe(getUserBackRef, getValue);

  exports.setUserState = function(message, value) {
    return setValue(value, getUserStateRef(message));
  };

  exports.setUserBack = function(message, value) {
    return setValue(value, getUserBackRef(message));
  };

  exports.setUserStatus = R.curry(R.pipe(getUserStatusRef, setValue));


  /* TEST */


  /*message =
    user: 'U036HR7S2'
    team: 'T02FHSL18'
  
   * log addId status: 'fisk', message
   * exports.setUserState message, 'idle'
  exports.getUserState(message)
  .then log
   */

}).call(this);
