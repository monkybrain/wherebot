// Generated by CoffeeScript 1.10.0
(function() {
  var Firebase, Promise, R, Rx, base, dot, entities, getStatus, getTeamId, getUserId, getUserRef, getUserState, getUserStateRef, getUserStatusRef, log, makeUserObject, message, response$, setUserState, setUserStatus, teams;

  Firebase = require('firebase');

  Promise = require('promise');

  R = require('ramda');

  Rx = require('rx');

  dot = require('../misc/helpers').dot;

  log = require('../misc/util').log;

  base = new Firebase('https://werebot.firebaseio.com/');

  teams = base.child('teams');


  /* PRIVATE */

  getTeamId = dot('team');

  getUserId = dot('user');

  getStatus = dot('status');

  getUserRef = function(teamId, userId) {
    return teams.child(teamId).child('users/' + userId);
  };

  getUserStateRef = function(teamId, userId) {
    return getUserRef(teamId, userId).child('state');
  };

  getUserStatusRef = function(teamId, userId) {
    return getUserRef(teamId, userId).child('status');
  };

  makeUserObject = function(userId, snapshot) {
    var user;
    user = {};
    user[userId] = snapshot.val();
    return user;
  };


  /* PUBLIC */

  response$ = new Rx.Subject();

  getUserState = function(message) {
    return new Promise((function(_this) {
      return function(resolve, reject) {
        return getUserStateRef(getTeamId(message), getUserId(message)).once('value', function(snapshot) {
          var state;
          state = snapshot.val() == null ? 'idle' : state;
          resolve(state);
          return response$.onNext(state);
        });
      };
    })(this));
  };

  setUserStatus = function(message, entities) {
    return getUserStatusRef(getTeamId(message), getUserId(message)).set(entities['status']);
  };

  setUserState = function(message, state) {
    return getUserStateRef(getTeamId(message), getUserId(message)).set(state);
  };

  module.exports = {
    response$: response$.share(),
    getUserState: getUserState,
    setUserStatus: setUserStatus,
    setUserState: setUserState
  };


  /* TEST */

  message = {
    team: 'T0123',
    user: 'U0ABC'
  };

  entities = {
    status: 'at work'
  };

}).call(this);
